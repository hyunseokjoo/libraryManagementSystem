[tool.poetry]
name = "lms"
version = "0.1.0"
description = ""
authors = ["eddie"]
license = "eddie"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "0.110.2"
uvicorn = "0.29.0"
starlette = "0.37.2"
sqlalchemy = "2.0.29"
pydantic = "==1.*"
alembic = "1.13.1"
psycopg2-binary = "^2.9.9"
psycopg2 = "^2.9.9"

[tool.poetry.group.dev.dependencies]
pytest = "8.1.1"
isort = "^5.13.2"
black = "^24.4.2"
mypy = "^1.10.0"
ruff = "^0.4.3"
flake8 = "^7.0.0"
pre-commit = "^3.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true
files = "src"

[tool.black]
line-length = 100
target_version = ["py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
skip_glob = ["migrations/*"]


[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    # "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # complexity
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "W"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Assume Python 3.11
target-version = "py311"

# Same as Black.
line-length = 100

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
